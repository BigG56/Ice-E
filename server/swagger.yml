openapi: 3.0.1
info:
  title: Ice-E API
  version: '1.0'
  description: PERN app
  contact:
    email: tyz_56@hotmail.com
    name: Tyler Fielding
paths:
  /auth/register:
    summary: register user
    description: registers a new user
    post:
      summary: registers users
      description: registers a new user to the user database
      operationId: auth_register
      requestBody:
        description: A new user object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Register'
      responses:
        '200':
          description: Successfully registers user
          content:
            application/json:
              examples:
                register:
                  value:
                    email: 'john_doe@hotmail.com'
                    password: 'password'
                    firstname: 'John'
                    lastname: 'Doe'
                    google: {}
                    username: 'JohnDoe'
        default:
          description: Error
      tags:
        - Register
  /auth/login:
    summary: login path
    description: logs user in
    post:
      summary: log in
      description: logs a user in to the site
      operationId: auth_login
      requestBody:
        description: Login object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Login'
      responses:
        '200':
          description: Successfully logs a user in
          content:
            application/json:
              examples:
                login:
                  value:
                    email: 'JohnDoe@hotmail.com'
                    password: 'password'
        default:
          description: Error
      tags:
        - Login
  /users/:userId:
    summary: get user info, cart and adddress
    description: gets user info, cart, address by id
    get:
      summary: gets user info, cart and address
      description: gets user info, cart and address by user id
      operationId: user_Id
      responses:
        '200':
          description: Successfully gets user info, cart and address by id
          content:
            application/json:
              examples:
                userId:
                  value:
                    email: 'john_doe@hotmail.com'
                    password: 'password'
                    firstname: 'John'
                    lastname: 'Doe'
                    google: {}
                    username: 'JohnDoe'
                    addressline1: '54 mead road'
                    addressline2: 'avonmouth'
                    city: 'bristol'
                    county: 'avon'
                    postcode: 'bs45 5ty'
                    id: 6
                    userid: 26
                    modified: 2023-02-20
                    created: 2023-02-20
        default:
          description: Error
      tags:
        - UserId
    put:
      summary: change user
      description: changes user details
      operationId: user_update
      requestBody:
        description: UserUpdate object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserUpdate'
      responses:
        '200':
          description: Successfully update user
          content:
            application/json:
              examples:
                user_update:
                  value:
                    email: 'john_doe1@hotmail.com'
                    password: 'password1'
                    firstname: 'Johnathan'
                    lastname: 'doe'
                    userName: 'JohnDoe1'
        default:
          description: Error
      tags:
        - UserUpdate
  /users/:userId/account/address:
    summary: create delivery address
    description: creates users delivery address
    post:
      summary: create address info
      description: creates delivery info for user  
      operationId: address
      responses:
        '200':
          description: Successfully creates address info
          content:
            application/json:
              examples:
                userId:
                  value:
                    addressline1: '54 mead road'
                    addressline2: 'avonmouth'
                    city: 'bristol'
                    county: 'avon'
                    postcode: 'bs45 5ty'
    get:
      summary: gets address info
      description: gets delivery info for user  
      operationId: getAddress
      responses:
        '200':
          description: Successfully gets address info
          content:
            application/json:
              examples:
                userId:
                  value:
                    addressline1: '54 mead road'
                    addressline2: 'avonmouth'
                    city: 'bristol'
                    county: 'avon'
                    postcode: 'bs45 5ty'
        default:
          description: Error
      tags:
        - UserAddress
  /products:
    summary: gets products
    description: gets all products from database
    get:
      summary: gets products
      description: gets all products
      operationId: products
      responses:
        '200':
          description: Successfully gets all products
          content:
            application/json:
              examples:
                products:
                  value:
                    id: 1
                    name: 'Gold Celtic Tree Of Life'
                    price: 402.55
                    description: 'This Celtic Tree of Life Necklace comes in Gold and Sterling Silver. The current selection is made from Solid 10K Gold. Height excl bail 20 mm. Width 20 mm.'
                    img: 'https://cngln.com/media/mageworx/optionfeatures/product/option/value/P/9/P979-Y_1_metal_yellow.jpg'
                    type: 'necklace'
                    metal: 'gold'
        default:
          description: Error
      tags:
        - Products
  /products/:productId/:
    summary: gets product by id
    description: gets products by specific id
    get:
      summary: gets product by id
      description: gets a product by the id designated to it
      operationId: products_productId
      responses:
        '200':
          description: Successfully gets product by id
          content:
            application/json:
              examples:
                product_id:
                  value:
                    id: 1
                    name: 'Gold Celtic Tree Of Life'
                    price: 402.55
                    description: 'This Celtic Tree of Life Necklace comes in Gold and Sterling Silver. The current selection is made from Solid 10K Gold. Height excl bail 20 mm. Width 20 mm.'
                    img: 'https://cngln.com/media/mageworx/optionfeatures/product/option/value/P/9/P979-Y_1_metal_yellow.jpg'
                    type: 'necklace'
                    metal: 'gold'
        default:
          description: Error
      tags:
        - ProductId
  /users/:userId/carts/:cartId:
    summary: gets cart
    description: gets a users cart
    get:
      summary: gets cart
      description: gets a user cart by id
      operationId: myCart
      responses:
        '200':
          description: Successfully gets user cart
          content:
            application/json:
              examples:
                myCart:
                  value:
                    id: 6
                    userid: 26
                    modified: 2023-02-20
                    created: 2023-02-20
        default:
          description: Error
      tags:
        - MyCart
    post:
      summary: create cart
      description: creates a cart for user
      operationId: createCart
      responses:
        '200':
          description: Successfully creates a cart
          content:
            application/json:
              examples:
                createCart:
                  value:
                    id: 6
                    userid: 26
                    modified: 2023-02-20
                    created: 2023-02-20
        default:
          description: Error
      tags:
        - CreateCart
  users/:userId/carts/:cartId/:
    summary: add item to cart
    description: adds a item to user cart
    post:
      summary: add item to cart
      description: adds a item to the users cart
      operationId: addItem
      responses:
        '200':
          description: Successfully added item to cart
          content:
            application/json:
              examples:
                addItem:
                  value:
                    id: 26
                    cartid: 6
                    productid: 2 
                    qty: 5
        default:
          description: Error
      tags:
        - AddItem
  /users/:userId/carts/:cartId/items/:cartItemId:
    summary: change cart item
    description: changes the item in cart
    put:
      summary: change cart item
      description: changes the cart item in user cart
      operationId: changeItem
      responses:
        '200':
          description: Successfully changed item in cart
          content:
            application/json:
              examples:
                changeItem:
                  value:
                    qty: 7
        default:
          description: Error
      tags:
        - ChangeItem
    delete:
      summary: delete item
      description: deletes item in cart
      operationId: deleteItem
      responses:
        '200':
          description: Successfully deleted item
          content:
            application/json:
              examples:
                deleteItem:
                  value: '{}'
        default:
          description: Error
      tags:
        - DeleteItem
  /users/:userId/carts/:cartId/checkout:
    summary: cart checkout
    description: checkout items in your cart
    post:
      summary: checks out cart
      description: checks out the items in users cart
      operationId: checkout
      responses:
        '200':
          description: Successfully purchases items in cart
          content:
            application/json:
              examples:
                checkout:
                  value: 
                    id: 15
                    total: 120110
                    status: 'COMPLETE'
                    userid: 26
                    created: 2023-02-20
                    modified: 2023-02-20
                    items: []
        default:
          description: Error
      tags:
        - Checkout
  /user/:userId/orders/:
    summary: gets order
    description: gets order by user
    get:
      summary: get orders
      description: gets order by user id
      operationId: orders
      responses:
        '200':
          description: Successfully gets orders by user id
          content:
            application/json:
              examples:
                orders:
                  value:
                    id: 15
                    total: 120110
                    status: 'COMPLETE'
                    userid: 26
                    created: 2023-02-20
                    modified: 2023-02-20
                    items: []
        default:
          description: Error
      tags:
        - Orders
  /users/:userId/orders/:orderId/:
    summary: gets orders
    description: gets order by order id
    get:
      summary: gets orders
      description: gets orders by order id
      operationId: orders_orderId
      responses:
        '200':
          description: Successfully gets orders by order id
          content:
            application/json:
              examples:
                orderId:
                  value: '{}'
        default:
          description: Error
      tags:
        - OrderId
components:
  schemas:
    Register:
      type: object
      properties:
        email:
          type: string
        password:
          type: string
        firstname:
          type: string
        lastname:
          type: string
        google:
          type: object
        username:
          type: string
      xml:
        name: Register
    Login:
      type: object
      properties:
        email:
          type: string
        password:
          type: string
      xml:
        name: Login
    UserUpdate:
      type: object
      properties:
        firstname:
          type: string
        lastname:
          type: string
        userName:
          type: string
      xml:
        name: UserUpdate
    addAddress:
      type: object
      properties:
        addressline1:
          type: string
        addressline2:
          type: string
        city:
          type: string
        county:
          type: string
        postcode:
          type: string
        userid:
          type: integer          
      xml:
        name: UserUpdate
